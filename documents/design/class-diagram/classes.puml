@startuml classes
set namespaceSeparator none
class "Aeorian" as aulos.TET12.scale.Aeorian {
}
class "Aeorian_f5" as aulos.TET12.scale.Aeorian_f5 {
}
class "AlteredSuperLocrian" as aulos.TET12.scale.AlteredSuperLocrian {
}
class "Aulos" as aulos.utils.aulos.Aulos {
  name : str
  setting
  Chorus()
  Compressor()
  Deray()
  Distortion()
  Equalizer()
  Flanger()
  Looper()
  PitchShift()
  Reverb()
  Track()
  Tremolo()
  WorkSpace()
}
class "AulosContext" as aulos.utils.context.AulosContext {
}
class "AulosObject" as aulos._core.object.AulosObject {
  T : NoneType
  setting
  schema() -> T
}
class "BaseComponent" as aulos.ui.components.base.BaseComponent {
  {abstract}create_widget() -> None
  {abstract}default() -> None
}
class "Bluenote" as aulos.TET12.scale.Bluenote {
}
class "Chord" as aulos.chord.chord.Chord {
  components
  on
  positions
  quality
  root
  invert(inversion: int) -> Chord
  is_inverted() -> bool
  transpose(interval: int) -> Chord
}
class "CombDiminish" as aulos.TET12.scale.CombDiminish {
}
class "Context" as aulos._core.framework.context.Context {
  data : t.ClassVar[ContextVar[dict[str, t.Any]]]
  setting : t.ClassVar[ContextVar[Setting]]
}
class "Diminish" as aulos.TET12.scale.Diminish {
}
class "Dorian" as aulos.TET12.scale.Dorian {
}
class "Dorian_f2" as aulos.TET12.scale.Dorian_f2 {
}
class "Dorian_s4" as aulos.TET12.scale.Dorian_s4 {
}
class "Equal12Tuner" as aulos.TET12.tuner.Equal12Tuner {
}
class "HarmonicMinor" as aulos.TET12.scale.HarmonicMinor {
}
class "Ionian" as aulos.TET12.scale.Ionian {
}
class "Ionian_s5" as aulos.TET12.scale.Ionian_s5 {
}
class "JustIntonationTuner" as aulos.TET12.tuner.JustIntonationTuner {
}
class "Key" as aulos.TET12.note.Key {
}
class "KeySchema" as aulos.note.schemas.key.KeySchema {
  accidental : int
  keynames
  pitchclass
  ensure_valid_keyname(keyname: str) -> None
  generate_key_signatures(keyname: str) -> tuple[int, ...]
  is_keyname(value: t.Any) -> t.TypeGuard[str]
  validate() -> None
}
class "KeySelecter" as aulos.ui.components.selecter.keyselecter.KeySelecter {
  callbacks_onClickKeyButton : list[t.Callable[[], t.Any]]
  keyname
  master : Misc
  create_widget()
  default()
  set_callback_onClickKeyButton(callback: t.Callable[[], t.Any])
}
class "Locrian" as aulos.TET12.scale.Locrian {
}
class "Locrian_n6" as aulos.TET12.scale.Locrian_n6 {
}
class "Lydian" as aulos.TET12.scale.Lydian {
}
class "Lydian_f7" as aulos.TET12.scale.Lydian_f7 {
}
class "Lydian_s2" as aulos.TET12.scale.Lydian_s2 {
}
class "Lydian_s5" as aulos.TET12.scale.Lydian_s5 {
}
class "Major" as aulos.TET12.scale.Major {
}
class "MeantoneTuner" as aulos.TET12.tuner.MeantoneTuner {
}
class "MelodicMinor" as aulos.TET12.scale.MelodicMinor {
}
class "Minor" as aulos.TET12.scale.Minor {
}
class "MinorPentatonic" as aulos.TET12.scale.MinorPentatonic {
}
class "Mixolydian" as aulos.TET12.scale.Mixolydian {
}
class "Mixolydian_f6" as aulos.TET12.scale.Mixolydian_f6 {
}
class "Mixolydian_f9" as aulos.TET12.scale.Mixolydian_f9 {
}
class "Note" as aulos.TET12.note.Note {
}
class "NoteSchema" as aulos.note.schemas.note.NoteSchema {
  name2number : dict[str, int]
  notenames
  notenumbers
  number2name : dict[int, tuple[str | None]]
  pitchclass
  reference_notenumber : int
  reference_octave : int
  symbols_notenumber : tuple[int, ...]
  symbols_octave : tuple[str, ...]
  convert_notename_to_notenumber(notename: str) -> int
  convert_notename_to_pitchname(notename: str) -> str
  convert_notenumber_to_notename(notenumber: int, accidental: int) -> str | None
  convert_notenumber_to_notenames(notenumber: int) -> tuple[str | None, ...]
  convert_notenumber_to_pitchclass(notenumber: int) -> int
  convert_pitchclass_to_notenumber(pitchclass: int, octave: int) -> int
  convert_pitchname_to_notename(pitchname: str, octave: int) -> str
  count_accidental(notename: str) -> int
  ensure_valid_notename(notename: str) -> None
  ensure_valid_notenumber(notenumber: int) -> None
  initialize() -> None
  is_notename(value: t.Any) -> t.TypeGuard[str]
  is_notenumber(value: t.Any) -> t.TypeGuard[int]
  validate() -> None
}
class "Pentatonic" as aulos.TET12.scale.Pentatonic {
}
class "Phrygian" as aulos.TET12.scale.Phrygian {
}
class "PitchClass" as aulos.TET12.note.PitchClass {
}
class "PitchClassSchema" as aulos.note.schemas.pitchclass.PitchClassSchema {
  accidental : int
  cardinality : int
  class2name : dict[int, tuple[str | None, ...]]
  intervals : tuple[int, ...]
  name2class : dict[str, int]
  pitchclasses
  pitchnames
  positions : tuple[int, ...]
  symbols_accidental : tuple[str, ...]
  symbols_pitchclass : tuple[str, ...]
  convert_pitchclass_to_pitchname(pitchclass: int, accidental: int) -> str | None
  convert_pitchclass_to_pitchnames(pitchclass: int) -> tuple[str | None, ...]
  convert_pitchclass_to_symbol(pitchclass: int) -> str | None
  convert_pitchname_to_picthclass(pitchname: str) -> int
  convert_pitchname_to_symbol(pitchname: str) -> str
  count_accidental(pitchname: str) -> int
  ensure_valid_accidental(accidental: int) -> None
  ensure_valid_pitchclass(pitchclass: int) -> None
  ensure_valid_pitchname(pitchname: str) -> None
  find_pitchname(value: str) -> str | None
  initialize() -> None
  is_pitchclass(value: t.Any) -> t.TypeGuard[int]
  is_pitchname(value: t.Any) -> t.TypeGuard[str]
  is_symbol(value: t.Any) -> t.TypeGuard[str]
  validate() -> None
}
class "PythagoreanTuner" as aulos.TET12.tuner.PythagoreanTuner {
}
class "Quality" as aulos.chord.quality.Quality {
  areas() -> tuple[str, ...]
  name() -> str
  positions() -> tuple[int, ...]
}
class "ScaleSchema" as aulos.scale.schemas.scale.ScaleSchema {
  pitchclass
  generate_scale_signatures(intervals: tuple[int, ...]) -> tuple[int, ...]
}
class "ScaleSelecter" as aulos.ui.components.selecter.scaleselecter.ScaleSelecter {
  callbacks_onClickScaleButton : list[t.Callable[[], t.Any]]
  master : Misc
  scale
  scaleinfo
  scalename
  create_widget()
  default()
  set_callback_onClickScaleButton(callback: t.Callable[[], t.Any])
}
class "ScaleViewer" as aulos.ui.components.scaleviewer.ScaleViewer {
  keyselecter
  master : Misc
  scaledisplay
  scaleselecter
  create_widget()
  default()
  display_scaledisplay()
}
class "Schema" as aulos._core.schema.Schema {
  initialize() -> None
  validate() -> None
}
class "Setting" as aulos._core.setting.Setting {
  default() -> t.Self
  from_dict(value: dict[str, t.Any]) -> t.Self
  from_json(path: Path) -> t.Self
  from_toml(path: Path) -> t.Self
}
class "SuperLocrian" as aulos.TET12.scale.SuperLocrian {
}
class "TunerSchema" as aulos.tuner.schemas.tuner.TunerSchema {
  note
  pitchclass
  reference_notenumber : int
  validate() -> None
}
class "Wholetone" as aulos.TET12.scale.Wholetone {
}
class "_DiatonicScale" as aulos.scale.diatonic._DiatonicScale {
  T : NoneType
}
class "_Display" as aulos.ui.components.scaleviewer._Display {
  keyname
  master : Misc
  scaleinfo
  scalename
  create_widget()
  default()
}
class "_Key" as aulos.note.key._Key {
  name
  pitchclass
  pitchname
  pitchnames
  signature
  is_keyname(value: t.Any) -> t.TypeGuard[str]
}
class "_NondiatonicScale" as aulos.scale.diatonic._NondiatonicScale {
  T : NoneType
  signatures
  intervals() -> tuple[int, ...]
  positions() -> tuple[int, ...]
}
class "_Note" as aulos.note.note._Note {
  hz
  notename
  notenames
  notenumber
  pitchclass
  pitchname
  pitchnames
  scale
  tuner
  is_notename(notename: t.Any) -> t.TypeGuard[str]
  is_notenumber(notenumber: t.Any) -> t.TypeGuard[int]
}
class "_PitchClass" as aulos.note.pitchclass._PitchClass {
  pitchclass
  pitchname
  pitchnames
  scale
  is_pitchclass(pitchclass: t.Any) -> t.TypeGuard[int]
  is_pitchname(pitchname: t.Any) -> t.TypeGuard[str]
}
class "_Scale" as aulos.scale.scale._Scale {
  PitchClass : type[T]
  T : NoneType
  components
  key
  signatures
  intervals() -> tuple[int, ...]
  positions() -> tuple[int, ...]
}
class "_Tuner" as aulos.tuner.tuner._Tuner {
  root
  hz(notenumber: int) -> float
}
aulos.TET12.note.Key --|> aulos.note.key._Key
aulos.TET12.note.Note --|> aulos.note.note._Note
aulos.TET12.note.PitchClass --|> aulos.note.pitchclass._PitchClass
aulos.TET12.scale.Aeorian --|> aulos.TET12.scale.Major
aulos.TET12.scale.Aeorian_f5 --|> aulos.TET12.scale.MelodicMinor
aulos.TET12.scale.AlteredSuperLocrian --|> aulos.TET12.scale.HarmonicMinor
aulos.TET12.scale.Bluenote --|> aulos.scale.diatonic._NondiatonicScale
aulos.TET12.scale.CombDiminish --|> aulos.scale.diatonic._NondiatonicScale
aulos.TET12.scale.Diminish --|> aulos.scale.diatonic._NondiatonicScale
aulos.TET12.scale.Dorian --|> aulos.TET12.scale.Major
aulos.TET12.scale.Dorian_f2 --|> aulos.TET12.scale.MelodicMinor
aulos.TET12.scale.Dorian_s4 --|> aulos.TET12.scale.HarmonicMinor
aulos.TET12.scale.HarmonicMinor --|> aulos.scale.diatonic._DiatonicScale
aulos.TET12.scale.Ionian --|> aulos.TET12.scale.Major
aulos.TET12.scale.Ionian_s5 --|> aulos.TET12.scale.HarmonicMinor
aulos.TET12.scale.Locrian --|> aulos.TET12.scale.Major
aulos.TET12.scale.Locrian_n6 --|> aulos.TET12.scale.HarmonicMinor
aulos.TET12.scale.Lydian --|> aulos.TET12.scale.Major
aulos.TET12.scale.Lydian_f7 --|> aulos.TET12.scale.MelodicMinor
aulos.TET12.scale.Lydian_s2 --|> aulos.TET12.scale.HarmonicMinor
aulos.TET12.scale.Lydian_s5 --|> aulos.TET12.scale.MelodicMinor
aulos.TET12.scale.Major --|> aulos.scale.diatonic._DiatonicScale
aulos.TET12.scale.MelodicMinor --|> aulos.scale.diatonic._DiatonicScale
aulos.TET12.scale.Minor --|> aulos.scale.diatonic._DiatonicScale
aulos.TET12.scale.MinorPentatonic --|> aulos.scale.diatonic._NondiatonicScale
aulos.TET12.scale.Mixolydian --|> aulos.TET12.scale.Major
aulos.TET12.scale.Mixolydian_f6 --|> aulos.TET12.scale.MelodicMinor
aulos.TET12.scale.Mixolydian_f9 --|> aulos.TET12.scale.HarmonicMinor
aulos.TET12.scale.Pentatonic --|> aulos.scale.diatonic._NondiatonicScale
aulos.TET12.scale.Phrygian --|> aulos.TET12.scale.Major
aulos.TET12.scale.SuperLocrian --|> aulos.TET12.scale.MelodicMinor
aulos.TET12.scale.Wholetone --|> aulos.scale.diatonic._NondiatonicScale
aulos.TET12.tuner.Equal12Tuner --|> aulos.tuner.tuner._Tuner
aulos.TET12.tuner.JustIntonationTuner --|> aulos.tuner.tuner._Tuner
aulos.TET12.tuner.MeantoneTuner --|> aulos.tuner.tuner._Tuner
aulos.TET12.tuner.PythagoreanTuner --|> aulos.tuner.tuner._Tuner
aulos.chord.chord.Chord --|> aulos._core.object.AulosObject
aulos.note.key._Key --|> aulos._core.object.AulosObject
aulos.note.note._Note --|> aulos._core.object.AulosObject
aulos.note.pitchclass._PitchClass --|> aulos._core.object.AulosObject
aulos.note.schemas.key.KeySchema --|> aulos._core.schema.Schema
aulos.note.schemas.note.NoteSchema --|> aulos._core.schema.Schema
aulos.note.schemas.pitchclass.PitchClassSchema --|> aulos._core.schema.Schema
aulos.scale.diatonic._DiatonicScale --|> aulos.scale.scale._Scale
aulos.scale.diatonic._NondiatonicScale --|> aulos.scale.scale._Scale
aulos.scale.scale._Scale --|> aulos._core.object.AulosObject
aulos.scale.schemas.scale.ScaleSchema --|> aulos._core.schema.Schema
aulos.tuner.schemas.tuner.TunerSchema --|> aulos._core.schema.Schema
aulos.tuner.tuner._Tuner --|> aulos._core.object.AulosObject
aulos.ui.components.scaleviewer.ScaleViewer --|> aulos.ui.components.base.BaseComponent
aulos.ui.components.scaleviewer._Display --|> aulos.ui.components.base.BaseComponent
aulos.ui.components.selecter.keyselecter.KeySelecter --|> aulos.ui.components.base.BaseComponent
aulos.ui.components.selecter.scaleselecter.ScaleSelecter --|> aulos.ui.components.base.BaseComponent
aulos.utils.context.AulosContext --|> aulos._core.framework.context.Context
aulos._core.setting.Setting --* aulos.utils.aulos.Aulos : setting
aulos.chord.quality.Quality --* aulos.chord.chord.Chord : _quality
aulos.note.key._Key --* aulos.scale.scale._Scale : _key
aulos.note.pitchclass._PitchClass --* aulos.chord.chord.Chord : _root
aulos.note.schemas.note.NoteSchema --* aulos.tuner.schemas.tuner.TunerSchema : note
aulos.note.schemas.pitchclass.PitchClassSchema --* aulos.note.schemas.key.KeySchema : pitchclass
aulos.note.schemas.pitchclass.PitchClassSchema --* aulos.note.schemas.note.NoteSchema : pitchclass
aulos.note.schemas.pitchclass.PitchClassSchema --* aulos.scale.schemas.scale.ScaleSchema : pitchclass
aulos.note.schemas.pitchclass.PitchClassSchema --* aulos.tuner.schemas.tuner.TunerSchema : pitchclass
aulos.ui.components.scaleviewer._Display --* aulos.ui.components.scaleviewer.ScaleViewer : scaledisplay
aulos.ui.components.selecter.keyselecter.KeySelecter --* aulos.ui.components.scaleviewer.ScaleViewer : keyselecter
aulos.ui.components.selecter.scaleselecter.ScaleSelecter --* aulos.ui.components.scaleviewer.ScaleViewer : scaleselecter
@enduml
