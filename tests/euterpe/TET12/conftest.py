import pytest


@pytest.fixture(scope="module")
def data_pitchclass() -> list[int]:
    return [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]


@pytest.fixture(scope="module")
def data_pitchname() -> tuple[str, ...]:
    return (
        "Dbb",
        "C",
        "B#",
        "A###",
        "Ebbb",
        "Db",
        "C#",
        "B##",
        "Fbbb",
        "Ebb",
        "D",
        "C##",
        "B###",
        "Fbb",
        "Eb",
        "D#",
        "C###",
        "Gbbb",
        "Fb",
        "E",
        "D##",
        "Gbb",
        "F",
        "E#",
        "D###",
        "Abbb",
        "Gb",
        "F#",
        "E##",
        "Abb",
        "G",
        "F##",
        "E###",
        "Bbbb",
        "Ab",
        "G#",
        "F###",
        "Cbbb",
        "Bbb",
        "A",
        "G##",
        "Cbb",
        "Bb",
        "A#",
        "G###",
        "Dbbb",
        "Cb",
        "B",
        "A##",
    )


@pytest.fixture(scope="module")
def data_map_pitchclass_to_pitchnames() -> dict[int, tuple[str | None, ...]]:
    return {
        0: (None, "Dbb", None, "C", "B#", None, "A###"),
        1: ("Ebbb", None, "Db", None, "C#", "B##", None),
        2: ("Fbbb", "Ebb", None, "D", None, "C##", "B###"),
        3: (None, "Fbb", "Eb", None, "D#", None, "C###"),
        4: ("Gbbb", None, "Fb", "E", None, "D##", None),
        5: (None, "Gbb", None, "F", "E#", None, "D###"),
        6: ("Abbb", None, "Gb", None, "F#", "E##", None),
        7: (None, "Abb", None, "G", None, "F##", "E###"),
        8: ("Bbbb", None, "Ab", None, "G#", None, "F###"),
        9: ("Cbbb", "Bbb", None, "A", None, "G##", None),
        10: (None, "Cbb", "Bb", None, "A#", None, "G###"),
        11: ("Dbbb", None, "Cb", "B", None, "A##", None),
    }


@pytest.fixture(scope="module")
def data_map_pitchname_to_pitchclass() -> dict[str, int]:
    return {
        "A": 9,
        "A#": 10,
        "A##": 11,
        "A###": 0,
        "Ab": 8,
        "Abb": 7,
        "Abbb": 6,
        "B": 11,
        "B#": 0,
        "B##": 1,
        "B###": 2,
        "Bb": 10,
        "Bbb": 9,
        "Bbbb": 8,
        "C": 0,
        "C#": 1,
        "C##": 2,
        "C###": 3,
        "Cb": 11,
        "Cbb": 10,
        "Cbbb": 9,
        "D": 2,
        "D#": 3,
        "D##": 4,
        "D###": 5,
        "Db": 1,
        "Dbb": 0,
        "Dbbb": 11,
        "E": 4,
        "E#": 5,
        "E##": 6,
        "E###": 7,
        "Eb": 3,
        "Ebb": 2,
        "Ebbb": 1,
        "F": 5,
        "F#": 6,
        "F##": 7,
        "F###": 8,
        "Fb": 4,
        "Fbb": 3,
        "Fbbb": 2,
        "G": 7,
        "G#": 8,
        "G##": 9,
        "G###": 10,
        "Gb": 6,
        "Gbb": 5,
        "Gbbb": 4,
    }
